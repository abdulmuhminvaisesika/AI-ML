WU Getting Started

Getting started
API connection and access
Multiple layers of security are built into our APIs in accordance with the defense in depth principle. The client app needs to be authenticated using a private cert with mutual TLS (mTLS, a.k.a. two-way SSL), which also provides transport-level security using HTTPS for communication between the client and Western Union.

To connect with our APIs, we will provide you with a set of API keys that you would need to provide in every API request. If you don’t include your key when making an API request or you use one that is incorrect or outdated, WU returns an error.

Every account has 2 pairs of keys: 1 for testing and 1 for running live transactions. All API requests exist in either test or live mode, and objects—customers, prices, quotes, and so forth—in 1 mode can’t be manipulated by objects in the other.

Protocols
Https

Keys and access
Client applications will have to make a REST call to OAuth provider using their client credentials for getting the appropriate security token (OAuth 2.0 token). Client applications can store these tokens for further usage until they are expired.

Client applications can call APIs and services hosted on AWS using the security tokens (passed as HTTP Authorization header) and API keys assigned to them.

Western Union will verify the security token using the OAuth providers public key. It will also verify the API key and perform request throttling, if required.

Western Union will allow access to the protected resource or service after successful authentication.

Service-to-service communication will be secured via TLS and appropriate security group and subnet configurations.

 

API structure
Headers
Headers: Metadata fetched once OKTA authorization is successful

Field

Description

M/O

Type

Max length

Comments

x-wu-externalRefId

 

Unique request ID generated by calling partner application; used for end-to-end request tracking

M

String

48

It is optional for retail and not required for electronic channel. It will be unique for an operator.

x-wu-operatorKey

 

Used for FLA authentication

 

O

String

20

 

x-wu-apiKey

 

Used for machine-to-machine authentication

 

M

String

 

Key will have expiry in mins, and if it is expired, partner needs to get the new key from Okta. It is only Oauth.

x-wu-counterId

 

Counter ID for the communication channel to connect with Western Union

O

String

15

If the partner have different type of integrations, then partner can have different counter IDs to use on the APIs

x-wu-terminalId

 

Partner terminal ID

O

String

4

 

x-wu-channel

 

Type of device used to execute the transaction

 

M

String

 

enum:

ATM

WEB

CSR

MOBILE

RETAIL

WALLET

-PARTNERMOBILE

PARTNERCSC

RETAILPARTNER

 

x-wu-preferredLanguage

 

It is used to get notifications, error translations, etc.

O

String

3

 

 

** This header section is common for all the APIs described below.

Response attributes
Brief overview of response attributes:

"moreData": If there are more records that exist in addition to the record set displayed on current page.

IF the <DATA_MORE> = “N”, it means no more records are there to be fetched. No need to execute Config API with limit & offset parameters. Just process the fetched data and store it locally in your database.

Example:

N.txt
10 Jul 2025, 04:22 PM
ELSE IF the <DATA_MORE> = “Y” is returned in the first execution response, store the fetched data from WU into the local database. Perform Config API request again passing limit and offset param to fetch remaining records.

Example:

"numOfRecords": Number of records displayed as part of current record set in current page.

"totalNumOfRecords": Total number of records that exist.

** This response attributes section is common for all the Config APIs described below.

 Y.txt 

Error codes
The self-explanatory error messages with error code are displayed due to validation failures/system failures/missing values. These are REST API specific error codes.

Type

Code

Successful Response

200

Invalid Input

400

Unauthorized

401

Not Found

404

Server Error

500

NOTE: The errors name will be assigned based on the error type, e.g., DATA_VALIDATION_ERROR, INVALID_INPUT_PARAMETR. The error message will be free-form text, and it may not go beyond 150 chars.

Exceptions
The following table includes the exception details for the APIs. This section is also common to 400 – Invalid input supplied and 500 – Server error details. Please refer this section for the APIs whose responses have these details:

Field name

Properties

Description

Data type

400 – Invalid input supplied

 

 

 

headers

x-wu-externalRefId

External Reference ID sent by calling application in request header

String

 

x-wu-correlationID

Internal Reference ID generated for internal tracking purpose

String

content

WUError

Model representing Western Union Error schema

(Refer to the following table: See "")

Object

 

Field name

Properties

Description

Data type

500 – Server Error

 

 

 

headers

x-wu-externalRefId

External Reference ID sent by calling application in request header

String

 

x-wu-correlationID

Internal Reference ID generated for internal tracking purpose

String

content

WUError

Model representing Western Union Error schema

Object

 

Field name

Properties

Description

Data type

Examples

WUError – Properties

Name

Unique name of the error

String

VALIDATION_ERROR

 

Message

 

Message describing the error

String

One or more fields raised validation errors

 

errorCode

Account unavailable

String

U0034

 

correlationId

The tracking ID is a unique set of characters that helps to identify the origin of error in a transaction

String

 

 

Issues

Additional details of the errors (Refer to the following table: WUErrorDetails)

Array

 

Field name

Properties

Description

Data type

Examples

Field name

Properties

Description

Data type

Examples

WUErrorDetails

Model representing WUError details—list of fields causing errors and their specific error messages

 

Object

 

WUErrorDetails properties

Field

Field causing issue

String

agentAcctNumber

 

Issue

Field-specific issue description

String

Agent account number does not exist

